General:
[] is optional key
if state=1 , response may be null
All response in JSON includes original request and general key:
state:int:0/1/2	//0 for success
[error:String]
[info:String]


@RequestMapping
/User/login
@RequestBody
userName:String
password:String
type:String:merchant/customer
@ResponseBody
userId:int


@RequestMapping
/User/register
@RequestBody
userName:String
password:String
type:String:merchant/customer
//Only for merchant
[shopName:String]
[shopDescription:String]
@ResponseBody
userId:int


@RequestMapping
/User/changePwd
@RequestBody
userName:String
password:String
originalPassword:String
type:String:merchant/customer
@ResponseBody
userId:int
verify:int:0/1	//0 for current original password, 1 for wrong original password

@RequestMapping
/User/changeShop
//Only for merchant
@RequestBody
userName:String
type:String:merchant
[shopName:String]
[shopDescription:String]
@ResponseBody
userId:int


@RequestMapping
/User/showInfo
//Only for merchant
@RequestBody
userName:String
id:Integer
type:String:merchant
@ResponseBody
userId:int
regTime:timestamp
shopName:String
shopDescription:String

@RequestMapping
/Order/add
@RequestBody
userName:String
itemUid:String
address:String
phone:String
shipName:String
count:Integer
@ResponseBody
orderId:String

@RequestMapping
/Order/addItem
@RequestBody
orderId:String
itemId:String
@ResponseBody


@RequestMapping
/Order/changeStatus
@RequestBody
orderId:String
orderStatus:Integer
@ResponseBody
[newOrderId:String]

@RequestMapping
/Order/changeCount
@RequestBody
orderId:String
count:Integer
itemUid:String
@ResponseBody

@RequestMapping
/Order/get
@GET
orderId:String
@ResponseBody
userCustomerId:int
userCustomerName:string
createTime:timestamp
alterTime:timestamp
orderStatus:int
[userMerchantId:int]
[userMerchantName:string]
[shopName:string]
[shipAddressName:string]
[shipAddressAddress:string]
[shipAddressPhone:string]
ItemIid_count:[iid1:count1 , iid2:count2 , ...]


@RequestMapping
/Order/getByUser
@GET
userName
@ResponseBody
orders:List<Map<String,Object>>
{
id:String
creatTime:Timestamp
alterTime:Timestamp
status:Integer
customerName:String
merchantName:String
shipAddressName:String
shipAddressAddress:String
shipAddressPhone:String
orderItems:List<
Map<String,Object>
{
orderItemId:String
itemUid:String
count:Integer
}>
}

@RequestMapping
/Order/getByMerchant
@GET
userMerchantNameName
@ResponseBody
orders:List<Map<String,Object>>
{
id:String
creatTime:Timestamp
alterTime:Timestamp
status:Integer
customerName:String
merchantName:String
shipAddressName:String
shipAddressAddress:String
shipAddressPhone:String
orderItems:Map<String,Object>
{
orderItemId:String
itemUid:String
count:Integer
}
}

@RequestMapping
/Item/list
@RequestBody
pattern:String
offset:Integer
count:Integer
@ResponseBody
itemUidList:List<String>
total:Integer

@RequestMapping
/Item/listByMerchant
@RequestBody
userMerchantName:String
offset:Integer
count:Integer
@ResponseBody
itemUidList:List<String>
total:Integer

@RequestMapping
/Item/get
@GET
uid:String
@ResponseBody
itemUid:String
itemIid:String
itemVer:Integer
itemName:String
itemPrice:Float
itemCount:Integer
itemShopUser:String
itemShopName:String
itemShopDesc:String
itemCreateTime:Timestamp
itemDesc:String
itemImgList:List<Img>//Img{id:String, value:String}

@RequestMapping
/Item/getByIid
@GET
iid:String
@ResponseBody
itemUid:String
itemIid:String
itemVer:Integer
itemName:String
itemPrice:Float
itemCount:Integer
itemShopUser:String
itemShopName:String
itemShopDesc:String
itemCreateTime:Timestamp
itemDesc:String
itemImgList:List<Img>//Img{id:String, value:String}

@RequestMapping
/Item/getAll
@GET
@ResponseBody
itemUids:List<String>

@RequestMapping
/Item/getNew
@GET
Integer number
@ResponseBody
itemUids:List<String>
length:Integer

@RequestMapping
/Item/getRandom
@GET
Integer number
@ResponseBody
itemUids:List<String>
length:Integer

@RequestMapping
/Item/add
@RequestBody
userMerchantId:String
rawImg:List<String>
name:String
price:Float
count:Integer
description:String
@ResponseBody
itemUid:String
itemIid:String
itemVer:Integer
itemName:String
itemPrice:Float
itemCount:Integer
itemShopUser:String
itemShopName:String
itemShopDesc:String
itemCreateTime:Timestamp
itemDesc:String
itemImgList:List<Img>//Img{id:String, value:String}

@RequestMapping
/Item/changeCount //changeCount is delta value, can be positive or negetive
@RequestBody
itemUid:String
count:Integer
@ResponseBody

@RequestMapping
/Item/edit
@RequestBody
itemIid:String
[name:String]
[price:Float]
description:String
imgs:List<Img>//Img{id:String, value:String}

@RequestMapping
/Img/add
@RequestBody
value:String
@ResponseBody
value:id

@RequestMapping
/Img/get
@RequestBody
id:String
@ResponseBody
value:String
